name: CI
on:
  # always execute docker build when something is pushed to master or release-* branches
  push:
    branches:
      - 'master'
      - 'main'
      - 'release-*'
  # in addition, execute for pull requests to those branches
  pull_request:
    branches:
      - 'master'
      - 'main'
      - 'release-*'
defaults:
  run:
    shell: bash
jobs:
  unit-tests:
    name: Unit Tests
    needs: prepare_ci_run
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        service: ["keptn-operator","gitops-operator","promotion-service"]
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16.2
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Load CI Environment from .ci_env
        id: load_ci_env
        uses: c-py/action-dotenv-to-setenv@v3
        with:
          env-file: .ci_env

      - name: Run Unit Tests
        run: go test -coverprofile=coverage.txt -covermode=atomic -v ./...
        working-directory: ${{ matrix.service }}/.


  ############################################################################
  # Build Docker Image                                                      #
  ############################################################################
  docker_build:
    needs: [prepare_ci_run, unit-tests]
    name: Docker Build
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        service: ["keptn-operator","gitops-operator","promotion-service"]
    env:
      BRANCH: ${{ needs.prepare_ci_run.outputs.BRANCH }}
      VERSION: ${{ needs.prepare_ci_run.outputs.VERSION }}
      DATETIME: ${{ needs.prepare_ci_run.outputs.DATE }}${{ needs.prepare_ci_run.outputs.TIME }}
      GIT_SHA: ${{ needs.prepare_ci_run.outputs.GIT_SHA }}
      TRIVY_IGNORE_UNFIXED: true
      TRIVY_VULN_TYPE: 'os,library'
      TRIVY_SEVERITY: 'CRITICAL,HIGH'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Load CI Environment from .ci_env
        id: load_ci_env
        uses: c-py/action-dotenv-to-setenv@v3
        with:
          env-file: .ci_env

      - id: docker_login
        name: Docker Login
        # only run docker login on pushes; also for PRs, but only if this is not a fork
        if: (github.event_name == 'push') || (github.event.pull_request.head.repo.full_name == github.repository)
        # note: GH does not allow to access secrets for PRs from a forked repositories due to security reasons
        # that's fine, but it means we can't push images to dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.service }}/.
          file: ${{ matrix.service }}/docker/Dockerfile
          platforms: linux/amd64
          tags: |
            ${{ env.DOCKER_ORGANIZATION }}/${{ matrix.service }}:${{ env.VERSION }}-test
          load: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ env.DOCKER_ORGANIZATION }}/${{ matrix.service }}:${{ env.VERSION }}-test"
          ignore-unfixed: '${{ env.TRIVY_IGNORE_UNFIXED }}'
          vuln-type: '${{ env.TRIVY_VULN_TYPE }}'
          severity: '${{ env.TRIVY_SEVERITY }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Build and Push
        id: docker_build_push
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.service }}/.
          push: true
          file: ${{ matrix.service }}/docker/Dockerfile
          platforms: linux/amd64
          tags: |
            ${{ env.DOCKER_ORGANIZATION }}/${{ matrix.service }}:${{ env.VERSION }}
